// 命名不要写‘b’ 和‘6’，不要写 ‘0’ 和 O 等容易混淆的字符


from collections import Iterable

用于判断一个对象是否能迭代
如果要对list实现类似Java那样的下标循环，enumerate函数可以把一个list变成索引-元素对，这样就可以在for循环中同时迭代索引和元素本身

List 生成


在Python中，这种一边循环一边计算的机制，称为生成器：generator。

定义generator的另一种方法。如果一个函数定义中包含yield关键字，那么这个函数就不再是一个普通函数，而是一个generator：

匿名函数有个限制，就是只能有一个表达式，不用写return，返回值就是该表达式的结果。

用匿名函数有个好处，因为函数没有名字，不必担心函数名冲突。此外，匿名函数也是一个函数对象，也可以把匿名函数赋值给一个变量，再利用变量来调用该函数：

装饰器：
代码运行期间动态增加功能的方式，称之为“装饰器”（Decorator）。

//偏函数，将string类型的值转换成int 例如：int（‘222’）
functools.partial（‘222’，base=2）

任何模块代码的第一个字符串都被视为模块的文档注释；


如果要让内部属性不被外部访问，可以把属性的名称前加上两个下划线__，在Python中，实例的变量名如果以__开头，就变成了一个私有变量（private），只有内部可以访问，外部不能访问

Python中，变量名类似__xxx__的，也就是以双下划线开头，并且以双下划线结尾的，是特殊变量，特殊变量是可以直接访问的，不是private变量

判断一个变量是否是某个类型可以用isinstance()判断

为了达到限制的目的，Python允许在定义class的时候，定义一个特殊的__slots__变量，来限制该class实例能添加的属性

如果要获得一个对象的所有属性和方法，可以使用dir()函数，它返回一个包含字符串的list

Python内置的@property装饰器就是负责把一个方法变成属性调用的

Python异常处理：
可以使用多个Except 捕获不同类型的错误

Python 文件操作
读取文件的时候，‘r’会按照编码格式进行解析，read() 操作返回的是Str
'rb' 也即 binary mode，read()操作返回的是bytes
要读取非UTF-8编码的文本文件，需要给open()函数传入encoding参数,例如读取GBK 编码文件
f = open(_path, 'r', encoding = 'gbk' )
遇到有些编码不规范的文件，你可能会遇到UnicodeDecodeError，因为在文本文件中可能夹杂了一些非法编码的字符。遇到这种情况，open()函数还接收一个errors参数，表示如果遇到编码错误后如何处理。最简单的方式是直接忽略：
f = open('/Users/michael/gbk.txt', 'r', encoding='gbk', errors='ignore')

写文件时，使用‘w’或 ‘wb’标识写文本还是写二进制文件
要写入特定编码的文本文件时，传入 encoding 参数，将字符串自动转换成指定编码
以'w'模式写入文件时，如果文件已存在，会直接覆盖（相当于删掉后新写入一个文件）。如果希望追加到文件末尾，可以传入'a'以追加（append）模式写入。


Python在内存中读写,使用StringIO,写入方式与文件相同
使用，GetValue() 方法读取
BytesIO 操作二进制数据


scrapy crawl dmoz  启动Spider  执行爬虫/需要进入项目的根目录




